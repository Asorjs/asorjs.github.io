// src/index.ts
import {
  createCombinePlugin
} from "unplugin-combine";

// src/core/exclude-macros.ts
function excludeDepOptimize() {
  return {
    name: "vue-macros-exclude-dep-optimize",
    config() {
      return {
        optimizeDeps: {
          exclude: ["unplugin-vue-macros/macros"]
        }
      };
    }
  };
}

// src/core/plugin.ts
function resolvePlugin(unplugin, framework, options) {
  if (!options) return;
  return unplugin[framework](options);
}

// src/index.ts
import VueBetterDefine from "@vue-macros/better-define";
import VueBooleanProp from "@vue-macros/boolean-prop";
import VueChainCall from "@vue-macros/chain-call";
import { resolveOptions } from "@vue-macros/config";
import VueDefineEmit from "@vue-macros/define-emit";
import VueDefineModels from "@vue-macros/define-models";
import VueDefineProp from "@vue-macros/define-prop";
import VueDefineProps from "@vue-macros/define-props";
import VueDefinePropsRefs from "@vue-macros/define-props-refs";
import VueDefineRender from "@vue-macros/define-render";
import VueDefineSlots from "@vue-macros/define-slots";
import { Devtools } from "@vue-macros/devtools";
import VueExportExpose from "@vue-macros/export-expose";
import VueExportProps from "@vue-macros/export-props";
import VueExportRender from "@vue-macros/export-render";
import VueHoistStatic from "@vue-macros/hoist-static";
import VueJsxDirective from "@vue-macros/jsx-directive";
import VueNamedTemplate from "@vue-macros/named-template";
import VueReactivityTransform from "@vue-macros/reactivity-transform";
import VueScriptLang from "@vue-macros/script-lang";
import VueSetupBlock from "@vue-macros/setup-block";
import VueSetupComponent from "@vue-macros/setup-component";
import VueSetupSFC from "@vue-macros/setup-sfc";
import VueShortBind from "@vue-macros/short-bind";
import VueShortEmits from "@vue-macros/short-emits";
import VueShortVmodel from "@vue-macros/short-vmodel";
import VueDefineOptions from "unplugin-vue-define-options";
import { defineConfig, resolveOptions as resolveOptions2 } from "@vue-macros/config";
var name = "unplugin-vue-macros";
var plugin = createCombinePlugin((userOptions = {}, meta) => {
  const options = resolveOptions(userOptions);
  const framework = meta.framework;
  const setupComponentPlugins = resolvePlugin(
    VueSetupComponent,
    framework,
    options.setupComponent
  );
  const namedTemplatePlugins = resolvePlugin(
    VueNamedTemplate,
    framework,
    options.namedTemplate
  );
  const plugins = [
    resolvePlugin(VueSetupSFC, framework, options.setupSFC),
    setupComponentPlugins?.[0],
    resolvePlugin(VueSetupBlock, framework, options.setupBlock),
    resolvePlugin(VueScriptLang, framework, options.scriptLang),
    options.plugins.vueRouter,
    namedTemplatePlugins?.[0],
    // props
    resolvePlugin(VueChainCall, framework, options.chainCall),
    resolvePlugin(VueDefineProps, framework, options.defineProps),
    resolvePlugin(VueDefinePropsRefs, framework, options.definePropsRefs),
    resolvePlugin(VueExportProps, framework, options.exportProps),
    // emits
    resolvePlugin(VueDefineEmit, framework, options.defineEmit),
    resolvePlugin(VueShortEmits, framework, options.shortEmits),
    // both props & emits
    resolvePlugin(VueDefineModels, framework, options.defineModels),
    // convert to runtime props & emits
    resolvePlugin(VueBetterDefine, framework, options.betterDefine),
    // runtime props
    resolvePlugin(VueDefineProp, framework, options.defineProp),
    resolvePlugin(VueDefineSlots, framework, options.defineSlots),
    resolvePlugin(VueExportRender, framework, options.exportRender),
    resolvePlugin(VueExportExpose, framework, options.exportExpose),
    resolvePlugin(
      VueReactivityTransform,
      framework,
      options.reactivityTransform
    ),
    resolvePlugin(VueHoistStatic, framework, options.hoistStatic),
    resolvePlugin(VueDefineOptions, framework, options.defineOptions),
    ...framework === "vite" || framework === "rollup" || framework === "rolldown" ? [
      resolvePlugin(
        // VueBooleanProp is not an unplugin, by now
        VueBooleanProp,
        framework,
        options.booleanProp
      ),
      resolvePlugin(
        // VueShortBind is not an unplugin, by now
        VueShortBind,
        framework,
        options.shortBind
      ),
      resolvePlugin(
        // VueShortVmodel is not an unplugin, by now
        VueShortVmodel,
        framework,
        options.shortVmodel
      )
    ] : [],
    options.plugins.vue,
    resolvePlugin(VueJsxDirective, framework, options.jsxDirective),
    options.plugins.vueJsx,
    resolvePlugin(VueDefineRender, framework, options.defineRender),
    setupComponentPlugins?.[1],
    namedTemplatePlugins?.[1],
    framework === "vite" ? Devtools({ nuxtContext: options.nuxtContext }) : void 0,
    framework === "vite" ? excludeDepOptimize() : void 0
  ].filter(Boolean);
  return {
    name,
    plugins
  };
});
var src_default = plugin;

export {
  src_default,
  defineConfig,
  resolveOptions2 as resolveOptions
};
